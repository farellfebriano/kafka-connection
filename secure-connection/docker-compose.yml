version: "2"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-network

  broker:
    image: docker.io/bitnami/kafka:3.4
    container_name: broker
    environment:
      # kafka external connection
      - KAFKA_CFG_ADVERTISED_LISTENERS=SSL://broker:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    volumes:
      - ./broker_config/server.properties:/opt/bitnami/kafka/config/server.properties
      - ./cert/keystore/kafka.keystore.jks:/opt/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - ./cert/truststore/kafka.truststore.jks:/opt/bitnami/kafka/config/certs/kafka.truststore.jks:ro
    depends_on:
      - zookeeper
    networks:
      - kafka-network

  producer:
    image: docker.io/bitnami/kafka:3.4
    container_name: producer
    environment:
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      # kafka external connection
      - KAFKA_CFG_ADVERTISED_LISTENERS,INTERNAL://producer:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    volumes:
      - ./producer_config/producer.properties:/opt/bitnami/kafka/config/producer.properties
      - ./cert/truststore/kafka.truststore.jks:/opt/bitnami/kafka/config/certs/kafka.truststore.jks:ro
    depends_on:
      - zookeeper
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
#kafka-console-producer.sh --producer.config /opt/bitnami/kafka/config/producer.properties --bootstrap-server broker:9092 --topic test
#kafka-console-consumer.sh --consumer.config /opt/bitnami/kafka/config/consumer.properties --bootstrap-server broker:9092 --topic test --from-beginning
