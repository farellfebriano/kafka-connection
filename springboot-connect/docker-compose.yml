version: "2"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094 # the "0.0.0.0://:9094" the kafka listen from outside the container with plain text
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://192.168.254.182:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - kafka-network

  consumer:
    image: kafkaconsumer/v.1.0.0
    container_name: consumer
    ports:
      - "8081:8080"
    environment:
      - KAFKA_BROKER_SERVER=kafka:9092
    networks:
      - kafka-network

  producer:
    image: kafkaproducer/v.1.0.0
    container_name: producer
    ports:
      - "8082:8080"
    environment:
      - KAFKA_BROKER_SERVER=kafka:9092
    networks:
      - kafka-network

  # kafdrop:
  #   image: obsidiandynamics/kafdrop:3.28.0
  #   depends_on:
  #     - kafka
  #   container_name: kafdrop
  #   environment:
  #     - KAFKA_BROKERCONNECT=kafka:9092
  #     - KAFKA_LISTENERS=INTERNAL://:29092,EXTERNAL://0.0.0.0:9000
  #     - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:29092,EXTERNAL://192.168.254.182:9000
  #     - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
  #   ports:
  #     - "9000:9000"
  #   networks:
  #     - kafka-network

networks:
  kafka-network:
    driver: bridge
